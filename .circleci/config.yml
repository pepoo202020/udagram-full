version: 2.1
orbs:
  node: circleci/node@4.1.0
  aws-cli: circleci/aws-cli@2.0.3
  eb: circleci/aws-elastic-beanstalk@1.0.0

commands:
  install_client:
    description: "command for Client Installation"
    steps:
      # Download and cache dependencies
      - restore_cache:
          keys:
            # Find a cache corresponding to this specific package.json checksum
            # when this file is changed, this key will fail
            - v1-dependencies-{{ checksum "package.json" }}
            # Find the most recently generated cache used from any branch
            - v1-dependencies-
      - run:
          name: Install Front-End Dependencies
          command: yarn frontend:install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
  install_server:
    description: "command for Server Installation"
    steps:
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package.json" }}
            - v2-dependencies-
      - run:
          name: Install Back-End Dependencies
          command: yarn api:install
      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package.json" }}

jobs:
  build:
    docker:
      - image: "cimg/base:stable"
    steps:
      - node/install
      - node/install-yarn
      - checkout
      - install_client
      - install_server
      - run:
          name: Build Front-End
          command: yarn frontend:build
      - run:
          name: Build Back-End
          command: yarn api:build
  test:
    docker:
      - image: "cimg/base:stable"
    steps:
      - node/install
      - node/install-yarn
      - checkout
      - install_client
      - install_server
      - run:
          name: Test Front-End
          command: yarn frontend:test
      - run:
          name: Test Back-End
          command: yarn frontend:test
  deploy:
    docker:
      - image: "cimg/base:stable"
    steps:
      - node/install
      - node/install-yarn
      - aws-cli/setup
      - eb/setup
      - checkout
      - install_client
      - install_server
      - run:
          name: Deploy Front-End
          command: yarn frontend:deploy
      - run:
          name: Deploy Back-End
          command: yarn api:deploy

workflows:
  build_test_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
